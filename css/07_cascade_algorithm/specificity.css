/* 
    The 3rd part of our algorithm is the specificity

    1. When importance and origin tie, then we decide by the help of specificity.
    2. We have the concept of specificity value of a selector.
    3. The specificity score of a selector is 3 column value.
    4. The first column is for Id selectors. 
    5. The second column is for classes, attribute and psuedo-classes selectors. 
    6. The third column is for elements and psuedo-element selectors.
    7. while comparing we start from the left and move to the right until the tie breaks.
    8. Combinators do not increase or decrease the specificity.
        - For example : span > div and span div have the same specificity.
    9. Universal selector does not contribute to the specificity.
    10. Final rule := !important > inline styles > id selector > (classes, psuedo-classes, attribute) > type and psuedo-element selector > universal selector > browser default styles

    Example, a specificity score of 1-0-0 would win over an specificity score of 0-11-2.
*/

/* 
    SPECIFICITY SCORES
    ==================
    1. SPECIFICITY(span div) = 0-0-2
    2. SPECIFICITY(.nav a:hover) = 0-2-1
    3. SPECIFICITY(#header .nav > p::first-line) = 1-1-2
*/

/* 
    SPECIFICITY MATCHES
    ===================
    1. div p.special VS .special + .main,
        - SPECIFICITY(div p.special) = 0-1-2
        - SPECIFICITY(.special .main) = 0-2-0
        - (.special .main) WINS !!!
    
    2. #navbar VS .main .feat .wide
        - SPECIFICITY(#navbar) = 1-0-0
        - SPECIFICITY(.main .feat .wide) = 0-3-0
        - (#navbar) WINS !!!
    
    3. .main + .active VS .main a:hover
        - SPECIFICITY(.main + .active) = 0-2-0
        - SPECIFICITY(.main a:hover) = 0-2-1
        - (.main a:hover) WINS !!!
    
    4. 1-0-0 VS 0-20-0
        - (1-0-0) WINS !!!
*/